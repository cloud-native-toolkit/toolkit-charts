apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "console-link-cronjob.fullname" . }}
  labels:
  {{- include "console-link-cronjob.labels" . | nindent 4 }}
data:
  reconcile-console-links.sh: |
    #!/bin/bash

    DEFAULT_SECTION="Cloud-Native Toolkit"
    DEFAULT_LOCATION="ApplicationMenu"

    # list all routes with console-link.cloud-native-toolkit.dev/enabled annotation
    ROUTES=$(kubectl get routes -A -l console-link.cloud-native-toolkit.dev/enabled=true -o yaml | yq eval -j '.' - | jq -c '.items[] | del(.metadata.annotations["kubectl.kubernetes.io/last-applied-configuration"])')

    if [[ -z "${ROUTES}" ]]; then
      echo "No routes found with 'console-link.cloud-native-toolkit.dev/enabled=true' annotation"
      exit 0
    fi

    # for each route create/update a console link
    echo "${ROUTES}" | while read -r route; do
      namespace="$(echo "${route}" | jq -r '.metadata.namespace')"
      name="$(echo "${route}" | jq -r '.metadata.name')"
      if [[ -z "${name}" ]]; then
        echo "Error parsing route: ${ROUTE}"
        continue
      fi
      host="$(echo "${route}" | jq -r '.spec.host')"

      category="$(echo "${route}" | jq -r '.metadata.annotations["console-link.cloud-native-toolkit.dev/category"] // empty')"
      section="$(echo "${route}" | jq -r --arg DEFAULT "${DEFAULT_SECTION}" '.metadata.annotations["console-link.cloud-native-toolkit.dev/section"] // $DEFAULT')"
      location="$(echo "${route}" | jq -r --arg DEFAULT "${DEFAULT_LOCATION}" '.metadata.annotations["console-link.cloud-native-toolkit.dev/location"] // $DEFAULT')"
      imageURL="$(echo "${route}" | jq -r '.metadata.annotations["console-link.cloud-native-toolkit.dev/imageUrl"] // empty')"
      text="$(echo "${route}" | jq -r --arg DEFAULT "$name" '.metadata.annotations["console-link.cloud-native-toolkit.dev/displayName"] // $DEFAULT')"

      app="$(echo "${route}" | jq -r --arg DEFAULT "${name}" '.metadata.labels["app.kubernetes.io/name"] // $DEFAULT')"
      if [[ -z "${app}" ]]; then
        app="$(echo "${route}" | jq -r --arg DEFAULT "${name}" '.metadata.labels["app"] // $DEFAULT')"
      fi
      partOf="$(echo "${route}" | jq -r --arg DEFAULT "${name}" '.metadata.labels["app.kubernetes.io/part-of"] // $DEFAULT')"

      cat > /tmp/console-link.yaml << EOL
    apiVersion: console.openshift.io/v1
    kind: ConsoleLink
    metadata:
      name: $name
    spec:
      applicationMenu:
        imageURL: "$imageURL"
        section: "$section"
      href: "https://$host"
      location: "$location"
      text: "$text"
    EOL

      echo "Creating/updating consolelink: ${name}"
      kubectl apply -f /tmp/console-link.yaml

      prefix=$(echo ${name^^} | sed "s/-/_/g")

      cat > /tmp/configmap.yaml << EOL
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: ${name}-config
      labels:
        group: cloud-native-toolkit
        app.kubernetes.io/component: tools
        app.kubernetes.io/part-of: ${partOf}
        app: ${app}
        app.kubernetes.io/name: ${app}
      annotations:
        console-link.cloud-native-toolkit.dev/category: ${category}
        console-link.cloud-native-toolkit.dev/section: ${section}
        console-link.cloud-native-toolkit.dev/imageUrl: ${imageUrl}
        console-link.cloud-native-toolkit.dev/displayName: ${text}
    spec:
      ${prefix}_URL: "https://$host"
    EOL

      echo "Creating/updating configmap: ${name}-config"
      kubectl apply -n "${namespace}" -f /tmp/configmap.yaml
    done

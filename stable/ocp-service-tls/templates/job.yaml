apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ocp-service-tls.name" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    argocd.argoproj.io/sync-wave: {{ include "ocp-service-tls.syncWave" . }}
  labels:
{{ include "ocp-service-tls.labels" . | nindent 4 }}
spec:
  template:
    spec:
      serviceAccountName: {{ required "The service account name is required" .Values.serviceAccount.name }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "ocp-service-tls.name" . }}
            defaultMode: 0777
      initContainers:
        - name: wait-for-service
          image: {{ printf "%s:%s" .Values.job.repository .Values.job.tag }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE
              value: {{ .Values.serviceName }}
          command: ["/opt/bin/wait-for-service.sh"]
          volumeMounts:
            - mountPath: /opt/bin
              name: scripts
      containers:
        - name: annotate-service
          image: {{ printf "%s:%s" .Values.job.repository .Values.job.tag }}
          command: ["/opt/bin/annotate-service.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE
              value: {{ .Values.serviceName }}
            - name: SECRET_NAME
              value: {{ required "The secretName is required" .Values.secretName }}
            {{- if .Values.caConfigName }}
            - name: CA_CONFIG_MAP_NAME
              value: {{ .Values.caConfigName }}
            {{- end }}
          volumeMounts:
            - mountPath: /opt/bin
              name: scripts
      restartPolicy: Never
  backoffLimit: 4

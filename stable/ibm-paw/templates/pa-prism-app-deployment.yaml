apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.common.appName }}
    app.kubernetes.io/name: {{ .Values.common.appName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    name: prism-app{{ .Values.instanceIdWithinNamespace }}
    release: {{ .Release.Name }}
  name: prism-app{{ .Values.instanceIdWithinNamespace }}
  annotations:
    argocd.argoproj.io/sync-wave: â€œ300"
spec:
  replicas: {{ .Values.prismApp.replicas }}
  selector:
    matchLabels:
      name: prism-app{{ .Values.instanceIdWithinNamespace }}
  template:
    metadata:
      annotations:
        hook.activate.cpd.ibm.com/command: '[]'
        hook.deactivate.cpd.ibm.com/command: '[]'        
        productName: IBM Planning Analytics Workspace
        productID: com.ibm.ba.paw.{{ .Release.Name }}
        productVersion: {{ .Release.Name }}
      labels:
        app: {{ .Values.common.appName }}
        app.kubernetes.io/name: {{ .Values.common.appName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        name: prism-app{{ .Values.instanceIdWithinNamespace }}
        release: {{ .Release.Name }}
        version: "3.0.5464-ubi8"
        pa-cacerts-version: {{ .Values.secrets.cacertVersion }}
        pa-tls-version: {{ .Values.secrets.tlsCertVersion }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm: 
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - prism-app{{ .Values.instanceIdWithinNamespace }}
              topologyKey: kubernetes.io/paw
      volumes:
        - name: pa-cacerts
          emptyDir:
            medium: {{ .Values.secrets.tlsEmptyDirMedium }}
            sizeLimit: {{ .Values.secrets.tlsEmptyDirSizeLimit }}
        - name: pa-tls-cacerts
          secret:
            secretName: pa-tls-cacerts{{ .Values.instanceIdWithinNamespace }}
        - name: pa-tls-cert
          secret:
            secretName: {{ .Values.secrets.tlsCertSecretName }}{{ .Values.instanceIdWithinNamespace }}
      initContainers:
        - name: prepare-cacerts
          image: {{ .Values.docker_registry_prefix }}/k8s-config:1.0.103-ubi8
          command: ["/bin/bash"]
          args: ["-c", "/opt/harmony/start.sh capem"]
          env:
           - name: PA_KUBE_TM1_CA_CERTS
             value: /run/secrets/paw/tls-cacerts/cacerts.pem
           - name: PA_KUBE_TLS_CA_CERT
             value: /run/secrets/paw/tls-cert/{{ .Values.secrets.tlsCaCertName }}
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: pa-cacerts
            mountPath: /run/config
          - name: pa-tls-cacerts
            mountPath: /run/secrets/paw/tls-cacerts
          - name: pa-tls-cert
            mountPath: /run/secrets/paw/tls-cert
      containers:
        - name: prism-app
          image: {{ .Values.docker_registry_prefix }}/prism-app:3.0.5464-ubi8
          ports:
            - containerPort: 9600
              protocol: TCP
          env:
            - name: REDIS_SENTINEL
              value: "{ \"name\": \"redis-cluster{{ .Values.instanceIdWithinNamespace }}\", \"sentinels\": [{ \"host\": \"sentinel1{{ .Values.instanceIdWithinNamespace }}.{{ .Release.Namespace }}.{{ .Values.common.internalDomainName }}\", \"port\": 26379 }, { \"host\": \"sentinel2{{ .Values.instanceIdWithinNamespace }}.{{ .Release.Namespace }}.{{ .Values.common.internalDomainName }}\", \"port\": 26379 }, { \"host\": \"sentinel3{{ .Values.instanceIdWithinNamespace }}.{{ .Release.Namespace }}.{{ .Values.common.internalDomainName }}\", \"port\": 26379 }], \"tls\": true }"
            - name: SSL_CA_BUNDLE_FILE
              value: "/run/config/cacerts.pem"
            - name: CDN_URL
              value: "/prism/3.0.10437-ubi8"
            - name: SHARE_URL
              value: "/wa-share/1.0.525-ubi8"
            - name: SAVE_URL
              value: "/wa-save/1.0.290"
            - name: MDV_URL
              value: "/prism/mdv/3.0.1568"
            - name: PLATFORM_HOST
              value: "prism-platform{{ .Values.instanceIdWithinNamespace }}"
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: pa-cacerts
              mountPath: /run/config
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      hostNetwork: false
      hostIPC: false
      hostPID: false
      restartPolicy: Always
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

